syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.mubel.api.grpc";

import "messages.proto";
import "google/protobuf/empty.proto";

package events;

service EventService {
  // Append new events to an event store
  rpc append (AppendRequest) returns (AppendAck) {}
  rpc get(GetEventsRequest) returns (GetEventsResponse) {}
  // Provisions a new event store. The call will fail if the event store already exists.
  rpc provision (ProvisionEventStoreRequest) returns (EventStoreDetails) {}
  rpc subscribe (SubscribeRequest) returns (stream EventData) {}
  rpc drop (DropEventStoreRequest) returns (DropEventStoreResponse) {}
  rpc serverInfo (GetServiceInfoRequest) returns (ServiceInfoResponse) {}
  rpc eventStoreSummary (GetEventStoreSummaryRequest) returns (EventStoreSummary) {}
  rpc scheduleEvent(ScheduledEvent) returns (google.protobuf.Empty);
  // Subscribe to scheduled events. The subscriber will receive events when they are published.
  rpc subscribeToScheduledEvents (ScheduledEventsSubscribeRequest) returns (stream TriggeredEvents) {}
  rpc cancelScheduledEvents (CancelScheduledEventsRequest) returns (google.protobuf.Empty) {}
  rpc joinConsumerGroup (JoinConsumerGroupRequest) returns (stream ConsumerGroupStatus) {}
  rpc leaveConsumerGroup (LeaveConsumerGroupRequest) returns (google.protobuf.Empty) {}
  rpc copyEvents (CopyEventsRequest) returns (JobStatus) {}
  rpc jobStatus (GetJobStatusRequest) returns (JobStatus) {}
}
